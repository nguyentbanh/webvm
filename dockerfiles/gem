# Use the standard 64-bit (amd64) Debian image as the base. This is required for Node.js.
FROM debian:buster

ARG DEBIAN_FRONTEND=noninteractive

# 1. Fix sources.list for the archived Debian Buster and add i386 architecture.
RUN dpkg --add-architecture i386 && \
    echo "deb http://archive.debian.org/debian/ buster main" > /etc/apt/sources.list && \
    echo "deb http://archive.debian.org/debian-security buster/updates main" >> /etc/apt/sources.list && \
    echo "deb http://archive.debian.org/debian/ buster-updates main" >> /etc/apt/sources.list

# 2. Update and install dependencies. We need 'curl' and 'xz-utils' for the manual Node.js install.
RUN apt-get update && \
    apt-get install -y --no-install-recommends curl xz-utils

# 3. Download and install Node.js v20 manually.
#    This avoids all the repository and GPG key errors from previous attempts.
RUN curl -fsSL https://nodejs.org/dist/v20.15.1/node-v20.15.1-linux-x64.tar.xz \
    | tar -xJ -C /usr/local --strip-components=1

# 4. Install all of your required i386 packages.
RUN apt-get -y install \
    apt-utils:i386 gcc:i386 \
	python3:i386 vim:i386 unzip:i386 ruby:i386 \
	fakeroot:i386 dbus:i386 base:i386 whiptail:i386 hexedit:i386 \
	patch:i386 wamerican:i386 ucf:i386 manpages:i386 \
	file:i386 luajit:i386 make:i386 lua50:i386 dialog:i386 \
	less:i386 cowsay:i386 netcat-openbsd:i386

# 5. Install the Gemini CLI globally using the now-available npm.
RUN npm install -g @google/gemini-cli

# --- The rest of your Dockerfile remains the same ---
RUN useradd -m user && echo "user:password" | chpasswd
COPY --chown=user:user ./examples /home/user/examples
RUN chmod -R +x  /home/user/examples/lua
WORKDIR /home/user/
ENV HOME="/home/user" TERM="xterm" USER="user" SHELL="/bin/bash" EDITOR="vim" LANG="en_US.UTF-8" LC_ALL="C"
RUN echo 'root:password' | chpasswd
CMD [ "/bin/bash" ]
