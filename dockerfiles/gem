###########################################
# Stage 0 : build Node from source (i386) #
###########################################
FROM i386/debian:bullseye AS node-build
ARG NODE_VERSION=22.2.0          # pick any ≥20
RUN apt-get update && apt-get install -y \
        build-essential python3 curl git ca-certificates \
        pkg-config libssl-dev xz-utils && \
    curl -fsSL https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}.tar.xz \
         -o /tmp/node.tar.xz && \
    tar -C /tmp -xf /tmp/node.tar.xz && \
    cd /tmp/node-v${NODE_VERSION} && \
    ./configure --prefix=/usr/local --dest-cpu=ia32 && \
    make -j"$(nproc)" && make install

###########################################
# Stage 1 : final runtime image (i386)    #
###########################################
FROM i386/debian:bullseye-slim
COPY --from=node-build /usr/local /usr/local    # brings in node + npm
RUN apt-get update && apt-get install -y --no-install-recommends \
        curl vim git ruby less … && \
    rm -rf /var/lib/apt/lists/*
RUN npm install -g @google/gemini-cli

# -----------------------------------------------------------------
# 3.  The rest of your original Dockerfile
# -----------------------------------------------------------------
RUN useradd -m user && echo "user:password" | chpasswd
COPY --chown=user:user ./examples /home/user/examples
RUN chmod -R +x /home/user/examples/lua

WORKDIR /home/user/
ENV HOME="/home/user" TERM="xterm" USER="user" SHELL="/bin/bash" \
    EDITOR="vim" LANG="en_US.UTF-8" LC_ALL="C"

RUN echo 'root:password' | chpasswd
CMD ["/bin/bash"]
